on:
  workflow_dispatch:  #manual execution
  push:               #automatic execution
    branches: 
      - main

jobs:
  build_push:
    permissions:            #for vulnerability scan
      security-events: write 
      actions: read  

    runs-on: ubuntu-latest
    steps:
      - name: Set step BUILD
        id: enviroment
        run: |
          echo "This is BUILD step"
      
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.0 
      
      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Database Migration
        run: |
          python manage.py makemigrations
          python manage.py migrate
          

# Unit Tests        
      - name: Set step UNIT TEST
        run: |
           echo "This is UNIT TEST step"
      
      - name: Execute Unit Tests
        run: |
          python manage.py test  |
          tee unit-tests.txt
         
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: unit-tests-results
          path: unit-tests.txt
        #always run this step to publish test results when there are test failures
        if: ${{ always() }}    
        

# Static Code Analysis using Pylint
      - name: Set step STATIC CODE
        run: |
           echo "This is STATIC CODE ANALYS step"
      
      - name: Lint with Pylint
        run: |
          pip install pylint
          pip install pylint-exit
          python -m pylint --enable=missing-docstring --recursive=y --reports=y *.py || pylint-exit $? |
          tee static-code.txt

      - name: Upload Pylint test results
        uses: actions/upload-artifact@v3
        with:
          name: static-code-results
          path: static-code.txt
       #always run this step to publish test results when there are test failures
        if: ${{ always() }}  


# Code Coverage Analaysis using PyTest-Cov
      - name: Set step CODE COVERAGE
        run: |
           echo "This is CODE COVERAGE step"       
      
      - name: Test with pytest-cov
        run: |
          python -m pip install coverage
          coverage run manage.py test
          coverage html

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-results
          path: htmlcov/index.html 
        #always run this step to publish test results when there are test failures
        if: ${{ always() }}    


# Vulnerabilities Scan using CodeQL
      - name: Set step VULNERABILITY SCAN
        run: |
           echo "This is VULNERABILITY SCAN step"         

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
          setup-python-dependencies: false    # override default behavior to avoid installing Python dependencies

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          output: tests/codeql-test-results

      - name: Upload CodeQL test results
        uses: actions/upload-artifact@v3
        with:
          name: vulnerability-scan-results
          path: python.sarif 
        #always run this step to publish test results when there are test failures
        if: ${{ always() }}  
          
          
# Build Docker image and push it to Docker Hub
      - name: Set step DOCKER BUILD PUSH
        run: |
           echo "This is DOCKER BUILD PUSH job" CEB dashboard pres

      #- name: Login to Docker Hub
      #  uses: docker/login-action@v3
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}  
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}

      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v3

      #- name: Build and push
      #  uses: docker/build-push-action@v5
      #  with:
      #    push: true
      #    tags: jolivieridocker/devsu:latest